plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
}


group = 'com.github.theword'
version = project.mod_version

java {
    archivesBaseName = "MC_QQ_Forge_${project.minecraft_version}"
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {

    mappings channel: 'official', version: minecraft_version

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'


            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'MCQQ'

            mods {
                mcqq {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'MCQQ'

            mods {
                mcqq {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'MCQQ'

            mods {
                mcqq {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'mcqq', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                mcqq {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft "net.minecraftforge:forge:${project.forge_version}"

    annotationProcessor("org.projectlombok:lombok:${project.lombok_version}")
    compileOnly("org.projectlombok:lombok:${project.lombok_version}")

    implementation files("libs/MC_QQ_Tool-${mcqq_tool_version}.jar")
    implementation files("libs/Java-WebSocket-${java_websocket_version}.jar")
    implementation files("libs/snakeyaml-${snakeyaml_version}.jar")
}


jar {
    from(project.zipTree("libs/snakeyaml-${snakeyaml_version}.jar"))
    from(project.zipTree("libs/Java-WebSocket-${java_websocket_version}.jar"))
    from(project.zipTree("libs/MC_QQ_Tool-${mcqq_tool_version}.jar"))
    manifest {
        attributes([
                "Specification-Title"     : "mcqq",
                "Specification-Vendor"    : "mcqq authors",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "mcqq authors",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
